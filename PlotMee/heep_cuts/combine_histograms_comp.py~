##########################################################################################
#                                  HEEP cutflow plotter                                  #
##########################################################################################
# (c) 2015 Aidan Randle-Conde (ULB)                                                      #
# Contact: aidan.randleconde@gmail.com                                                   #
# Github:  https://github.com/ULBHEEPAnalyses/HEEPCutFlow                                #
##########################################################################################

import math
import ROOT

##########################################################################################
#                                  Settings for the job                                  #
##########################################################################################
sname50 = 'PHYS14_ZprimeToEE_M5000_30bx50'
sname25 = 'PHYS14_ZprimeToEE_M5000_20bx25'


colors = {}
colors['HEEP_cutflow41_total'     ] = ROOT.kRed
colors['HEEP_cutflow50_50ns_total'] = ROOT.kBlue
colors['HEEP_cutflow50_25ns_total'] = ROOT.kGreen

##########################################################################################
#                             Import ROOT and apply settings                             #
##########################################################################################
ROOT.gROOT.SetBatch(ROOT.kTRUE)
ROOT.gStyle.SetOptStat(0)
ROOT.gStyle.SetPadTickX(1)
ROOT.gStyle.SetPadTickY(1)
#ROOT.gStyle.SetFillStyle(ROOT.kWhite)
ROOT.gStyle.SetOptTitle(0)
ROOT.gStyle.SetFrameBorderMode(ROOT.kWhite)
ROOT.gStyle.SetFrameFillColor(ROOT.kWhite)
ROOT.gStyle.SetCanvasBorderMode(ROOT.kWhite)
ROOT.gStyle.SetCanvasColor(ROOT.kWhite)
ROOT.gStyle.SetPadBorderMode(ROOT.kWhite)
ROOT.gStyle.SetPadColor(ROOT.kWhite)
ROOT.gStyle.SetStatColor(ROOT.kWhite)
ROOT.gStyle.SetErrorX(0)

##########################################################################################
#                                 Create canvas, labels                                  #
##########################################################################################
canvas = ROOT.TCanvas('canvas', '', 100, 100, 1200, 800)
canvas.SetGridx()
canvas.SetGridy()

canvas_plots = ROOT.TCanvas('canvas_plots', '', 100, 100, 1200, 600)
canvas_plots.Divide(2,1)
canvas_plots.GetPad(1).SetGridx()
canvas_plots.GetPad(1).SetGridy()
canvas_plots.GetPad(2).SetGridx()
canvas_plots.GetPad(2).SetGridy()

NM1_label = ROOT.TLatex(0.2,0.8,'(N-1) distribution')
NM1_label.SetNDC()

CMS_label_texts = {}
CMS_label_texts['normal'        ] = 'CMS'
CMS_label_texts['internal'      ] = 'CMS internal'
CMS_label_texts['workInProgress'] = 'CMS work in progress'
CMS_labels = {}
for t in CMS_label_texts:
    CMS_labels[t] = ROOT.TLatex(0.65, 0.945, CMS_label_texts[t])
    CMS_labels[t].SetNDC()
CMS_label = CMS_labels['internal']

region_labels = {}

region_labels['barrel'] = ROOT.TLatex(0.05,0.945,'Barrel')
region_labels['endcap'] = ROOT.TLatex(0.05,0.945,'Endcap')
region_labels['barrel'].SetNDC()
region_labels['endcap'].SetNDC()

cutflow_labels = {}
cutflow_labels['HEEP_cutflow41_total'     ] = ROOT.TLatex(0.25,0.945,'HEEP v4.1')
cutflow_labels['HEEP_cutflow50_50ns_total'] = ROOT.TLatex(0.25,0.945,'HEEP v5.0 (50 ns)')
cutflow_labels['HEEP_cutflow50_25ns_total'] = ROOT.TLatex(0.25,0.945,'HEEP v4.0 (25 ns)')
cutflow_labels['HEEP_cutflow41_total'     ].SetNDC()
cutflow_labels['HEEP_cutflow50_50ns_total'].SetNDC()
cutflow_labels['HEEP_cutflow50_25ns_total'].SetNDC()


##########################################################################################
#                             Get input file, set up cutflows                            #
##########################################################################################

file50_in = ROOT.TFile('histograms_ZprimeToEE_M5000_30bx50.root','READ')
file25_in = ROOT.TFile('histograms_ZprimeToEE_M5000_20bx25.root','READ')

sample_names = []
sample_names.append(sname50)
sample_names.append(sname25)

cutflow_names = []
#cutflow_names.append('HEEP_cutflow41_total'     )
cutflow_names.append('HEEP_cutflow50_50ns_total')
#cutflow_names.append('HEEP_cutflow50_25ns_total')

#h_cutflows = {}
#for cname in cutflow_names:
#    h_cutflows[cname] = {}
#    for sname in sample_names:
#        h_cutflows[cname][sname] = file_in.Get('hEvents_%s_%s'%(cname,sname))

#first = True

##########################################################################################
#                                     Create legend                                      #
##########################################################################################
legx = 0.2
legy = 0.2
legend_cutflow = ROOT.TLegend(legx, legy, legx+0.4, legy+0.2)
legend_cutflow.SetFillColor(0)
legend_cutflow.SetShadowColor(0)
legend_cutflow.SetBorderSize(0)


##########################################################################################
#                              Plot HEEP; Sample 50 vs 25 comparison
##########################################################################################
var_names = []
var_names.append('Et'             )
var_names.append('eta'            )
var_names.append('EcalDriven'     )
var_names.append('dEtaIn'         )
var_names.append('dPhiIn'         )
var_names.append('HOverE'         )
var_names.append('SigmaIetaIeta'  )
var_names.append('E1x5OverE5x5'   )
var_names.append('E2x5OverE5x5'   )
var_names.append('missingHits'    )
var_names.append('dxyFirstPV'     )
var_names.append('isolEMHadDepth1')
var_names.append('IsolPtTrks'     )

var_log = {}
var_log_names = ['Et','dEtaIn','dPhiIn','HOverE','SigmaIetaIeta','dxyFirstPV','IsolPtTrks']
for vname in var_names:
    var_log[vname] = False
for vname in var_log_names:
    var_log[vname] = True

regions = ['barrel','endcap']

for vname in var_names:
    for rname in regions:
        hRaw_50 = file50_in.Get('hraw_HEEP_cutflow50_50ns_total_%s_%s_%s'%( vname, sname50, rname))
        hNM1_50 = file50_in.Get('hNM1_HEEP_cutflow50_50ns_total_%s_%s_%s'%( vname, sname50, rname))

        hRaw_25 = file25_in.Get('hraw_HEEP_cutflow50_25ns_total_%s_%s_%s'%( vname, sname25, rname))
        hNM1_25 = file25_in.Get('hNM1_HEEP_cutflow50_25ns_total_%s_%s_%s'%( vname, sname25, rname))

        #hRaw_25.SetFillColor(ROOT.kBlue)
        hRaw_25.SetLineColor(ROOT.kBlack)
        #hCum_25.SetFillColor(ROOT.kGreen)
        hNM1_25.SetLineColor(ROOT.kBlack)
        #hNM1_25.SetFillColor(ROOT.kBlue)
        hRaw_25.SetFillStyle(3004)
        #hCum_25.SetFillStyle(3004)
        hNM1_25.SetFillStyle(3004)
        
        legend_var = ROOT.TLegend(0.12,0.85,0.88,0.78)
        legend_var.SetFillColor(0)
        legend_var.SetBorderSize(0)
        legend_var.SetShadowColor(0)
        legend_var.SetNColumns(2)
        legend_var.AddEntry(hRaw_50, '30bx50'       , 'f')#Raw distribution
        #legend_var.AddEntry(hCum_50, 'Cumulative distribution for HEEP 50 ns', 'f')

        legend_var.AddEntry(hRaw_25, '20bx25'       , 'pl')
        #legend_var.AddEntry(hCum_25, 'Cumulative distribution for HEEP 25 ns', 'f')
        
        #hRaw_50.Add(hRaw_25,-1)
        #hCum_50.Add(hCum_25,-1)
        #hNM1_50.Add(hNM1_25,-1)
        canvas_plots.GetPad(1).SetLogy(var_log[vname])
        canvas_plots.GetPad(2).SetLogy(var_log[vname])
        
        hRaw_50.GetYaxis().SetTitleOffset(1.5)
        hNM1_50.GetYaxis().SetTitleOffset(1.5)
        hRaw_50.SetFillColor(ROOT.kBlue -7)
        hNM1_50.SetFillColor(ROOT.kBlue -7)

        hRaw_25.GetYaxis().SetTitleOffset(1.5)
        hNM1_25.GetYaxis().SetTitleOffset(1.5)
        
        multiplier = 10 if var_log[vname] else 1.25
        hRaw_50.SetMaximum(multiplier*hRaw_50.GetMaximum())
        #hCum_50.SetMaximum(multiplier*hCum_50.GetMaximum())
        hNM1_50.SetMaximum(multiplier*hNM1_50.GetMaximum())
        
        # Draw everything
        # Raw and cumulative first
        canvas_plots.cd(1)
        hRaw_50.Draw()
        #hCum_50.Draw('sames')
        hRaw_50.Draw('sames:axis')

        hRaw_25.Draw('sameep')
        #hCum_25.Draw('sames')
        hRaw_25.Draw('sames:axis')
        legend_var.Draw()
        CMS_label.Draw()
        region_labels[rname].Draw()
        #cutflow_labels[cname].Draw()
        #cutflow_labels['HEEP_cutflow50_50ns_total'].Draw()
        
        # Then N-1
        canvas_plots.cd(2)
        hNM1_50.Draw()
        hNM1_25.Draw('sameep')
        legend_var2 = ROOT.TLegend(0.12,0.85,0.88,0.78)
        legend_var2.SetFillColor(0)
        legend_var2.SetBorderSize(0)
        legend_var2.SetShadowColor(0)
        legend_var2.SetNColumns(2)
        #legend_var2.AddEntry(hNM1_50, 'N-1 distribution 30bx50'       , 'f')
        #legend_var2.AddEntry(hNM1_25, 'N-1 distribution 20bx25', 'pl')
        legend_var2.Draw()
        NM1_label.Draw()
        CMS_label.Draw()
        region_labels[rname].Draw()
        #cutflow_labels[cname].Draw()
        #cutflow_labels['HEEP_cutflow50_50ns_total'].Draw()
        
        canvas_plots.Print('plots/vars/heep_comp_50_25_%s_%s.eps'%( vname, rname))
        canvas_plots.Print('plots/vars/heep_comp_50_25_%s_%s.png'%( vname, rname))
        canvas_plots.Print('plots/vars/heep_comp_50_25_%s_%s.pdf'%( vname, rname))

